{"ast":null,"code":"var _jsxFileName = \"/Users/astrautsou/projects/my-fullstack-router-app/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// DONE\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// DONE\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// DONE\n// 4. Add properly working links to the MainNavigation\n// DONE\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// DONE\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// DONE\n// 7. Output the ID of the selected event on the EventDetailPage\n// DONE\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n// DONE\n\nimport React from 'react';\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport EventsPage, { loader as eventsLoader } from './pages/Events';\nimport EventDetailPage, { loader as eventDetailLoader, action as deleteEventAction } from './pages/EventDetail';\nimport NewEventPage from './pages/NewEvent';\nimport EditEventPage from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport ErrorPage from './pages/Error';\nimport { action as manipulateEventAction } from './components/EventForm';\nvar router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/React.createElement(RootLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }\n  }),\n  errorElement: /*#__PURE__*/React.createElement(ErrorPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/React.createElement(HomePage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 31\n      }\n    })\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/React.createElement(EventsRootLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 34\n      }\n    }),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/React.createElement(EventsPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 35\n        }\n      }),\n      loader: eventsLoader\n    }, {\n      path: ':eventId',\n      id: 'event-detail',\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/React.createElement(EventDetailPage, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 39\n          }\n        }),\n        action: deleteEventAction\n      }, {\n        path: 'edit',\n        element: /*#__PURE__*/React.createElement(EditEventPage, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 40\n          }\n        }),\n        action: manipulateEventAction\n      }]\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/React.createElement(NewEventPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 35\n        }\n      }),\n      action: manipulateEventAction\n    }]\n  }, {\n    path: 'newsletter'\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/React.createElement(RouterProvider, {\n    router: router,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  });\n}\nexport default App;","map":{"version":3,"names":["React","RouterProvider","createBrowserRouter","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","eventDetailLoader","action","deleteEventAction","NewEventPage","EditEventPage","RootLayout","EventsRootLayout","ErrorPage","manipulateEventAction","router","path","element","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App"],"sources":["/Users/astrautsou/projects/my-fullstack-router-app/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// DONE\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// DONE\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// DONE\n// 4. Add properly working links to the MainNavigation\n// DONE\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// DONE\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// DONE\n// 7. Output the ID of the selected event on the EventDetailPage\n// DONE\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n// DONE\n\nimport React from 'react';\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\n\nimport HomePage from './pages/Home';\nimport EventsPage, {\n  loader as eventsLoader\n} from './pages/Events';\nimport EventDetailPage, {\n  loader as eventDetailLoader,\n  action as deleteEventAction\n} from './pages/EventDetail';\nimport NewEventPage from './pages/NewEvent';\nimport EditEventPage from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport ErrorPage from './pages/Error';\nimport { action as manipulateEventAction } from './components/EventForm';\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: 'events', element: <EventsRootLayout />, children: [\n          { index: true, element: <EventsPage />, loader: eventsLoader },\n          {\n            path: ':eventId',\n            id: 'event-detail',\n            loader: eventDetailLoader,\n            children: [\n              { index: true, element: <EventDetailPage />, action: deleteEventAction },\n              { path: 'edit', element: <EditEventPage />, action: manipulateEventAction },\n            ]\n          },\n          { path: 'new', element: <NewEventPage />, action: manipulateEventAction },\n        ]\n      },\n      {\n        path: 'newsletter',\n\n    }\n    ]\n  }\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}