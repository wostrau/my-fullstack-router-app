{"ast":null,"code":"var _jsxFileName = \"/Users/astrautsou/projects/my-fullstack-router-app/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// DONE\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// DONE\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// DONE\n// 4. Add properly working links to the MainNavigation\n// DONE\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// DONE\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// DONE\n// 7. Output the ID of the selected event on the EventDetailPage\n// DONE\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport React from 'react';\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport EventsPage from './pages/Events';\nimport EventDetailPage from './pages/EventDetail';\nimport NewEventPage from './pages/NewEvent';\nimport EditEventPage from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nvar router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/React.createElement(RootLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/React.createElement(HomePage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 31\n      }\n    })\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/React.createElement(EventsRootLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }\n    }),\n    children: [{\n      path: '',\n      element: /*#__PURE__*/React.createElement(EventsPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 32\n        }\n      })\n    }, {\n      path: 'events/:eventId',\n      element: /*#__PURE__*/React.createElement(EventDetailPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 47\n        }\n      })\n    }, {\n      path: 'events/new',\n      element: /*#__PURE__*/React.createElement(NewEventPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 42\n        }\n      })\n    }, {\n      path: 'events/:eventId/edit',\n      element: /*#__PURE__*/React.createElement(EditEventPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 52\n        }\n      })\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/React.createElement(RouterProvider, {\n    router: router,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  });\n}\nexport default App;","map":{"version":3,"names":["React","RouterProvider","createBrowserRouter","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","RootLayout","EventsRootLayout","router","path","element","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","children","index","App"],"sources":["/Users/astrautsou/projects/my-fullstack-router-app/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// DONE\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// DONE\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// DONE\n// 4. Add properly working links to the MainNavigation\n// DONE\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// DONE\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// DONE\n// 7. Output the ID of the selected event on the EventDetailPage\n// DONE\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport React from 'react';\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport EventsPage from './pages/Events';\nimport EventDetailPage from './pages/EventDetail';\nimport NewEventPage from './pages/NewEvent';\nimport EditEventPage from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\n\nconst router = createBrowserRouter([\n  {\n    path: '/', element: <RootLayout />, children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: 'events', element: <EventsRootLayout />, children: [\n          { path: '', element: <EventsPage /> },\n          { path: 'events/:eventId', element: <EventDetailPage /> },\n          { path: 'events/new', element: <NewEventPage /> },\n          { path: 'events/:eventId/edit', element: <EditEventPage /> },\n        ]\n      }\n    ]\n  }\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,IAAMC,MAAM,GAAGR,mBAAmB,CAAC,CACjC;EACES,IAAI,EAAE,GAAG;EAAEC,OAAO,eAAEZ,KAAA,CAAAa,aAAA,CAACL,UAAU;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC;EAAEC,QAAQ,EAAE,CAC5C;IAAEC,KAAK,EAAE,IAAI;IAAET,OAAO,eAAEZ,KAAA,CAAAa,aAAA,CAACV,QAAQ;MAAAW,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE;EAAE,CAAC,EACtC;IACER,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEZ,KAAA,CAAAa,aAAA,CAACJ,gBAAgB;MAAAK,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;IAAEC,QAAQ,EAAE,CACvD;MAAET,IAAI,EAAE,EAAE;MAAEC,OAAO,eAAEZ,KAAA,CAAAa,aAAA,CAACT,UAAU;QAAAU,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE;IAAE,CAAC,EACrC;MAAER,IAAI,EAAE,iBAAiB;MAAEC,OAAO,eAAEZ,KAAA,CAAAa,aAAA,CAACR,eAAe;QAAAS,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE;IAAE,CAAC,EACzD;MAAER,IAAI,EAAE,YAAY;MAAEC,OAAO,eAAEZ,KAAA,CAAAa,aAAA,CAACP,YAAY;QAAAQ,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE;IAAE,CAAC,EACjD;MAAER,IAAI,EAAE,sBAAsB;MAAEC,OAAO,eAAEZ,KAAA,CAAAa,aAAA,CAACN,aAAa;QAAAO,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE;IAAE,CAAC;EAEhE,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASG,GAAGA,CAAA,EAAG;EACb,oBAAOtB,KAAA,CAAAa,aAAA,CAACZ,cAAc;IAACS,MAAM,EAAEA,MAAO;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC;AAC3C;AAEA,eAAeG,GAAG"},"metadata":{},"sourceType":"module"}